name: Run package tests 

on:
  push:
    paths:
      - "pysquril/**"
      - "pyproject.toml"
      - "poetry.lock"
      - ".github/workflows/tests.yaml"

env:
  POETRY_VERSION: 1.5.1
  PYSQURIL_POSTGRES_DB: pysquril_db
  PYSQURIL_POSTGRES_USER: pysquril_user
  PYSQURIL_POSTGRES_PASSWORD: pysquril_password
  PYSQURIL_POSTGRES_HOST: localhost


jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    services:
      postgres:
        image: docker.io/postgres:14
        env:
          POSTGRES_DB: ${{env.PYSQURIL_POSTGRES_DB}}
          POSTGRES_USER: ${{env.PYSQURIL_POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{env.PYSQURIL_POSTGRES_PASSWORD}}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 127.0.0.1:5432:5432

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
      - name: Install Poetry
        run: pipx install poetry==${{env.POETRY_VERSION}}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"
          cache-dependency-path: "poetry.lock"
      - name: Install package dependencies
        run: |
          poetry env use ${{ matrix.python-version }}
          poetry install
      - name: Test with pytest
        run: poetry run pytest pysquril/tests.py
